<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
	http://www.springframework.org/schema/context   
	http://www.springframework.org/schema/context/spring-context-4.3.xsd "
	default-autowire="byName">

	<!-- 对静态资源文件的访问 -->
	<mvc:default-servlet-handler />

	<aop:aspectj-autoproxy />

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 让@ResponseBody注解自动转换json -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 本处（只包含controller）使用DispatcherServlet管理容器 -->
	<context:component-scan
		base-package="com.zxj.**.controller">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>

	<!-- 全局加载配置文件 -->
	<bean id="configBean" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<!-- 加载配置中心 配置文件 -->
				<value>classpath:runtime.properties</value>
			</list>
		</property>
	</bean>

	<!--<mvc:interceptors>-->
		<!--<mvc:interceptor>-->
			<!--<mvc:mapping path="/**" />-->
			<!--<mvc:exclude-mapping path="/resources/**" />-->
			<!--<mvc:exclude-mapping path="/job/**" />-->
			<!--<bean class="com.zhaogang.sso.api.interceptor.LoginInterceptor" />-->
		<!--</mvc:interceptor>-->
	<!--</mvc:interceptors>-->

	<!-- 定义无需Controller的url<->view直接映射 -->
	<mvc:view-controller path="/" view-name="index" />
	<!--webapp/resources-->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- 设置freeMarker的配置文件路径 -->
	<bean id="freemarkerConfiguration"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location">
			<!--freemarker 模板文件配置 -->
			<value>classpath:freemarker.properties</value>
		</property>
	</bean>

	<!-- 配置freeMarker的模板路径 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/view/" />
		<property name="freemarkerSettings" ref="freemarkerConfiguration" />
	</bean>

	<!-- 配置freeMarker视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="requestContextAttribute" value="request" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="contentType" value="text/html; charset=utf-8" />
		<property name="suffix" value=".ftl" />
		<property name="cache" value="true" />
		<property name="order" value="0" />
	</bean>

	<!--<bean id="handlerExceptionResolver" class="com.zhaogang.common.exception.GlobalExceptionHandler"></bean>-->
	<bean id="registryMonitor" class="com.zxj.soa.common.registry.RegistryMonitor" init-method="registry">
		<property name="registryAddr" value="${registryAddr}" />
		<property name="applicationPort" value="${applicationPort}" />
		<property name="applicationName" value="${applicationName}" />
	</bean>
	
	<!--<bean class="com.zxj.registry.common.SpringContextContainer" lazy-init="false" />-->
	
</beans>
