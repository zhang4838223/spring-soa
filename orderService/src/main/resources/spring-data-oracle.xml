<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd "
       default-autowire="byName">

    <!-- 数据源配置 资源解析MySql配置-->
    <bean id="dataSource_oracle_local" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 数据库基本信息配置 -->
        <property name="driverClassName" value="${erpjdbc.driverClassName}"/>
        <property name="url" value="${erpjdbc.url}"/>
        <property name="username" value="${erpjdbc.username}"/>
        <property name="password" value="${erpjdbc.password}"/>
        <property name="validationQuery" value="${jdbc.validationQuery}"/>
        <!-- 初始化连接数量 -->
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <!-- 最大并发连接数 -->
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="${jdbc.minIdle}"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${jdbc.maxWait}"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
        <!-- 申请连接的时候检测 -->
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
        <!-- 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}"/>
        <!-- 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能  -->
        <property name="testOnReturn" value="${jdbc.testOnReturn}"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${jdbc.maxPoolPreparedStatementPerConnectionSize}"/>
        <!--属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
                    监控统计用的filter:stat
                    日志用的filter:log4j
                         防御SQL注入的filter:wall -->
        <property name="filters" value="${jdbc.filters}"/>
    </bean>

    <bean id="sqlSessionFactory_oracle_local" class="com.easy.mybatis.common.factory.EasyMybatisSessionFactoryBean">
    	<property name="configLocation" value="classpath:mybatis/config-oracle.xml" />
        <property name="dataSource" ref="dataSource_oracle_local"/>
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
        <property name="mapperLocations" value="classpath*:mapper/erp/**/*Mapper.xml"/>
        <property name="configurationProperties">
        	<props>
        	<prop key="dialect">oracle</prop>
        	</props>
        </property>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zhaogang.dao.erp"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_oracle_local"/>
    </bean>

	<!-- 配置事务管理器 -->
    <bean id="erpTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource_oracle_local"/>
        <qualifier value="oracle"/>
    </bean>

    <!-- 注解方式配置事物 -->
    <tx:annotation-driven transaction-manager="erpTransactionManager"/>

</beans>  